/* tslint:disable */
/* eslint-disable */
/**
 * OpenCraft Instance Manager
 * API for OpenCraft Instance Manager
 *
 * The version of the OpenAPI document: api
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WatchedPullRequest
 */
export interface WatchedPullRequest {
    /**
     * 
     * @type {number}
     * @memberof WatchedPullRequest
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof WatchedPullRequest
     */
    readonly forkName?: string;
    /**
     * 
     * @type {string}
     * @memberof WatchedPullRequest
     */
    readonly targetForkName?: string;
    /**
     * 
     * @type {string}
     * @memberof WatchedPullRequest
     */
    branchName?: string;
    /**
     * 
     * @type {string}
     * @memberof WatchedPullRequest
     */
    readonly githubPrNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof WatchedPullRequest
     */
    githubPrUrl: string;
}

export function WatchedPullRequestFromJSON(json: any): WatchedPullRequest {
    return WatchedPullRequestFromJSONTyped(json, false);
}

export function WatchedPullRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WatchedPullRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'forkName': !exists(json, 'fork_name') ? undefined : json['fork_name'],
        'targetForkName': !exists(json, 'target_fork_name') ? undefined : json['target_fork_name'],
        'branchName': !exists(json, 'branch_name') ? undefined : json['branch_name'],
        'githubPrNumber': !exists(json, 'github_pr_number') ? undefined : json['github_pr_number'],
        'githubPrUrl': json['github_pr_url'],
    };
}

export function WatchedPullRequestToJSON(value?: WatchedPullRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch_name': value.branchName,
        'github_pr_url': value.githubPrUrl,
    };
}


